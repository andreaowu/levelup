!!!5
html
  script(src="/socket.io/socket.io.js")
  script(type='text/javascript')
      var socket = io.connect();

  head
    title #{title}
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js')
  
  body
    header
      h1 Welcome to Level Up!
    .container
      .main-content
        block content
      center
        input(type="button", id="joinGame", value = "Join game")
        input(type="button", id="drawCard", value = "Draw Card")
      br
      br
      center 
        h4(id="waiting") Waiting for players...
      .sidebar
        .widget
          h2 Table
          h3(id="name0")
          h3(id="name1")
          h3(id="name2")
          h3(id="name3")

      h5(id="whoisdrawing")
      h5(id="yougotthiscard")
      h7(id="declaration")
      h8(id="takingturn")
      h9(id="partner")

      script(type='text/javascript')
        $("h4").hide();
        $("#drawCard").hide();
        $("#whoisdrawing").hide();
        $("#yougotthiscard").hide();
        $("takingturn").hide();
        $("partner").hide();

        var cardSuit;
        var cardNum;
        var name;
        var cards = [];
        var margintop = 0;
        var declare = 0;
        var onLevel;

        $("#joinGame").click(function () {
          var enteredData = prompt("What's your name?");
          socket.emit('join', enteredData);
          name = enteredData;
          $(this).hide(function () {
            $(this).remove();
          });
          $("h4").show();
        });

        $("#drawCard").click(function () {
          socket.emit('drew');
          $("#drawCard").hide();
        });

        socket.on('start', function () {
          $("#drawCard").show();
        });

        socket.on('level', function (players, numbers) {
          $("h4").hide();
          for (var i = 0; i < 4; i++) {
            if (numbers[i] > 10) {
              if (numbers[i] == 11) {
                numbers[i] = "J";
              } else if (numbers[i] == 12) {
                numbers[i] = "Q";
              } else {
                numbers[i] = "K";
              }
            }
            document.getElementById("name" + i).innerHTML = players[i] + ", level: " + numbers[i];
          }
          $("#name0").css("margin-left", "50px")
          $("#name0").css("margin-top", "-263px")
          $("#name1").css("margin-right", "208px")
          $("#name1").css("float", "right")
          $("#name1").css("margin-top", "-150px")
          $("#name1").css("margin-left", "-210px")
          $("#name2").css("margin-left", "53px")
          $("#name2").css("margin-top", "8px")
          $("#name3").css("margin-left", "210px")
          $("#name3").css("margin-top", "-175px")
          $("#name3").css("margin-right", "-200px")
          $("h3").show();
          socket.emit('start');
        });

        socket.on('personal level', function(level) {
          if (level == 11) {
            onLevel = "J";
          } else if (level == 12) {
            onLevel = "Q";
          } else if (level == 13) {
            onLevel = "K";
          } else {
            onLevel = level;
          }
          console.log("personal level:" + onLevel);
        });

        socket.on('drawing', function(name) {
          document.getElementById("whoisdrawing").innerHTML = name + " is drawing a card";
          $("#whoisdrawing").css("text-align", "center")
          $("#whoisdrawing").css("margin-top", "80px")
          $("#whoisdrawing").show();
        });

        socket.on('giveCard', function(card) {
          console.log("card: " + card);
          cardSuit = card.substring(0, card.length - 2);
          cardNum = card.substring(card.length - 2, card.length);
          var str;
          console.log(cardNum)
          console.log(onLevel)
          if (cardNum == " " + onLevel || cardNum == " " + onLevel) {
            var str = "<input type='image' OnClick='declareACard();' src='" + cardSuit + "'><p>" + cardNum + "</p>";
          } else {
            var str = "<input type='image' src='" + cardSuit + "'><p>" + cardNum + "</p>";
          }
          $("<h6>" + str).appendTo(document.body);
          binarySearch(card);
        });

        socket.on('declarationHappened', function (player, suit, number) {
          alert(player + " declared!");
          document.getElementById("declaration").innerHTML = player + " declared: " + number +  " of <img src='" + suit + "' height = '25px'>!";
          declare = 1;
          $("#declaration").css("text-align", "center");
          $("#declaration").show();
        });

        socket.on('who stacking', function(name) {
          alert("Game starting, " + name + " is stacking cards.");
        });

        socket.on('stack', function(cards) {
          alert("Here's your stack");
          for (var i = 0; i < 4; i++) {
            binarySearch(cards[i]);
          }
          alert("Choose four cards to stack");
          var stacked = 0;
          $("h6").click(function () {
            socket.emit('stacked', this);
            $(this).hide(function () {
              $(this).remove();
            });
            stacked += 1;
            if (stacked == 4) {
              var partner = alert("What card is your partner?");
              socket.emit('done stacking', partner);
            }
          });
        });

        socket.on('who taking turn', function(name) {
          document.getElementById("takingturn").innerHTML = name + " is playing a card";
          $("takingturn").show();
        });

        socket.on('partner', function(partner, declarer) {
          document.getElementById("partner").innerHTML = "The person who plays " + partner + " is " + declarer + "'s partner";
          $("partner").show();
        });

        socket.on('taking turn', function() {});

        socket.on('goodbye', function () {
          $("h4").hide();
          alert("Sorry, table at capacity");
          document.getElementById("waiting").innerHTML = "Table at capacity";
          $("h4").show();
        });

        function declareACard() {
          console.log("hi");
          socket.emit('declare', name, cardSuit, cardNum);
        };

        function binarySearch(insert) {
          var counter = 0;
          while (1) {
            if (cards[counter] > insert && ( (counter - 1 >= 0 && cards[counter - 1] < insert) || counter - 1 < 0) ) {
              break;
            } else if (cards[counter] < insert) {
              if (counter == 0) {
                if (cards.length == 1) {
                  counter = Math.floor((cards.length + 1)/2);
                } else {
                  counter = Math.floor(cards.length/2);
                }
              } else {
                counter = counter*2;
              }
            } else if (counter - 1 >= 0 && cards[counter - 1] > insert) {
              if (counter == 0) {
                if (cards.length == 1) {
                  counter = Math.floor((cards.length + 1)/2);
                } else {
                  counter = Math.floor(cards.length/2);
                }
              } else {
                counter = counter/2;
              }
            } else {
              break;
            }
          }
          cards.push(insert);
          for (var i = cards.length - 1; i > counter; i--) {
            cards[i] = cards[i - 1];
          }
          cards[counter] = insert;
          console.log(cards);
        };

        function two(insert) {
          var counter = 0;
          while (1) {
            if ( ((counter + 1 < cards.length && cards[counter+1] > insert) || counter + 1 >= cards.length) && ((counter - 1 >= 0 && cards[counter - 1] < insert) || counter - 1 < 0) ) {
              break;
            } else if (cards[counter] < insert) {
              if (counter == 0) {
                if (cards.length == 1) {
                  counter = Math.floor((cards.length + 1)/2);
                } else {
                  counter = Math.floor(cards.length/2);
                }
              } else {
                counter = counter*2;
              }
            } else if (counter - 1 >= 0 && cards[counter - 1] > insert) {
              if (counter == 0) {
                if (cards.length == 1) {
                  counter = Math.floor((cards.length + 1)/2);
                } else {
                  counter = Math.floor(cards.length/2);
                }
              } else {
                counter = counter/2;
              }
            } else {
              break;
            }
          }
          if ( (counter + 1 < cards.length && cards[counter+1] == insert) || (counter - 1 >= 0 && cards[counter-1] == insert) ) {
            return 1;
          } else {
            return 0;
          }
        }



